@namespace FileFlows.Client.Pages
@using FileFlows.Client.Components.Dashboard;

@page "/old-dashboard"

@if (App.Instance.IsMobile && (int)ConfiguredStatus >= 3)
{
    <div class="mobile-dashboard-selector dashboard-selector">
        <select @bind="ActiveDashboardUid">
            @if (Dashboards?.Any() == true)
            {
                @foreach (var dashboard in Dashboards.OrderBy(x => x.Label))
                {
                    <option value=@dashboard.Value>@dashboard.Label</option>
                }
            }
        </select>
        @if (Profile.LicensedFor(LicenseFlags.Dashboards))
        {
            <button @onclick=@AddDashboard><i class="fas fa-plus"></i></button>
            <button disabled=@(DashboardDeletable == false) @onclick=@DeleteDashboard><i class="fas fa-trash"></i></button>
        }
    </div>
}
<CascadingValue Value="this" IsFixed="true">
    <PageView>

        <Head>
            @if (App.Instance.IsMobile == false)
            {
                if (ActiveDashboardUid != Guid.Empty && ActiveDashboardUid != FileFlows.Shared.Models.Dashboard.DefaultDashboardUid)
                {
                    <button class="btn" @onclick=@AddWidget>@lblAddWidget</button>
                }

                @if (Profile?.LicensedFor(LicenseFlags.Dashboards) == true)
                {
                    <div class="dashboard-selector">
                        <select @bind="ActiveDashboardUid">
                            @if (Dashboards?.Any() == true)
                            {
                                @foreach (var dashboard in Dashboards.OrderBy(x => x.Label))
                                {
                                    <option value=@dashboard.Value>@dashboard.Label</option>
                                }
                            }
                        </select>
                        <button @onclick=@AddDashboard><i class="fas fa-plus"></i></button>
                        <button disabled=@(DashboardDeletable == false) @onclick=@DeleteDashboard><i class="fas fa-trash"></i></button>
                    </div>
                }
            }

            @if (App.Instance.IsMobile == false && Profile?.HasRole(UserRole.PauseProcessing) == true)
            {
                <PauseResume />
            }
        </Head>

        <Body>
            @if (IsPaused)
            {
                <div class="system-paused" @onclick="() => PausedService.Resume()">
                    <i class="fas fa-pause"></i> @lblCurrentlyPaused
                </div>
            }
            <CustomDashboard ActiveDashboardUid=@ActiveDashboardUid />
        </Body>
    </PageView>
</CascadingValue>