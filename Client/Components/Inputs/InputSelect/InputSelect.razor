@namespace FileFlows.Client.Components.Inputs
@using FileFlows.Client.Models
@inherits Input<object>

<InputWrapper Input="@this">
    <div>
        <select id=@Uid @onchange="SelectionChanged" disabled="@Disabled" class="@(SelectedIndex == -1 ? "select-one" : "")" @onkeydown="OnKeyDown">
            @if (AllowClear)
            {
                <option class="select-one" selected=@(SelectedIndex == -1 ? "selected" : null) value="@(-1)">@lblSelectOne
                </option>
            }
            @{
                int index = -1;
                foreach (var group in Groups)
                {
                    if (group.Key == string.Empty)
                    {                        
                        foreach (var opt in group.Value)
                        {
                            ++index;
                            if (opt is IconListOption iconListOption)
                            {
                                if (string.IsNullOrWhiteSpace(iconListOption.IconUrl) == false)
                                {
                                    <option selected=@(SelectedIndex == index ? "selected" : null) value="@(index)"><img src="@iconListOption.IconUrl"/> @opt.Label</option>
                                    continue;
                                }
                                if (string.IsNullOrWhiteSpace(iconListOption.IconCss) == false)
                                {
                                    <option selected=@(SelectedIndex == index ? "selected" : null) value="@(index)"><i class="@iconListOption.IconCss"/> @opt.Label</option>
                                    continue;
                                }
                            }
                            <option selected=@(SelectedIndex == index ? "selected" : null) value="@(index)">@opt.Label</option>
                        }
                    }
                    else
                    {
                        <optgroup label=@group.Key>
                            @foreach (var opt in group.Value)
                            {
                                ++index;
                                if (opt is IconListOption iconListOption)
                                {
                                    if (string.IsNullOrWhiteSpace(iconListOption.IconUrl) == false)
                                    {
                                        <option selected=@(SelectedIndex == index ? "selected" : null) value="@(index)"><img src="@iconListOption.IconUrl"/> @opt.Label</option>
                                        continue;
                                    }
                                    if (string.IsNullOrWhiteSpace(iconListOption.IconCss) == false)
                                    {
                                        <option selected=@(SelectedIndex == index ? "selected" : null) value="@(index)"><i class="@iconListOption.IconCss"/> @opt.Label</option>
                                        continue;
                                    }
                                }
                                <option selected=@(SelectedIndex == index ? "selected" : null) value="@(index)">@opt.Label</option>
                            }
                        </optgroup>
                    }
                }
            }
        </select>
    </div>
</InputWrapper>