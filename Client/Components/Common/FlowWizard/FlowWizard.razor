@using Humanizer
@namespace FileFlows.Client.Components.Common

<div class="flow-wizard @(DisableChanging ? "disabled" :"")">

    <div class="flow-wizard-buttons">
        @foreach(var wp in Pages)
        {
            if (wp.Visible == false)
            {
                continue;
            }

            var className = $"wizard-button wb-{wp.Title.Dehumanize()} {(ActivePage == wp ? "active" : "")} " +
                            $"{(wp.Disabled ? "disabled" : "")} {(wp.Invalid ? "invalid": "")}";
            
            <span class="@className" @onclick="() => SelectPage(wp)" disabled="@(DisableChanging && ActivePage != wp)">
                @if (string.IsNullOrEmpty(wp.Icon) == false)
                {
                    <i class="@wp.Icon" />
                    @if (ActivePage == wp)
                    {
                        @wp.Title
                    }
                }
                else
                {
                    @wp.Title
                }
            </span>
        }
    </div>

    <div class="flow-wizard-content">
        @if (string.IsNullOrWhiteSpace(ActivePage?.Description) == false)
        {
            <div class="page-description">@ActivePage.Description</div>
        }
        <CascadingValue IsFixed=true Value=this>
            @ChildContent
        </CascadingValue>

        <div class="flow-wizard-navigation-buttons">
            @if (ActivePage != Pages.FirstOrDefault(x => x.Visible))
            {
                <span class="previous" @onclick="Previous">@Translater.Instant("Labels.Previous")</span>
            }
            @if (ActivePage != Pages.LastOrDefault(x => x.Visible))
            {
                <span class="next @(ActivePage?.NextDisabled == true ? "disabled" : "")" @onclick="Next">@Translater.Instant("Labels.Next")</span>
            }
            else
            {
                <span class="finish" @onclick="Finish">@Translater.Instant("Labels.Finish")</span>
            }
        </div>
    </div>

</div>