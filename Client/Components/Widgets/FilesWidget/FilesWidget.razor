@namespace FileFlows.Client.Components.Widgets

<ContainerWidget Title="@lblTitle" Scroll="true">
    <Head>
        <OptionButtons @ref=OptionButtons @bind-Value="FileMode">
            <WidgetOption Label="@lblUpcoming" Value="1" Icon="far fa-clock" Color="yellow" />
            <WidgetOption Label="@lblFinished" Value="0" Icon="far fa-check-circle" Color="green" />
            <WidgetOption Label="@lblFailed" Value="2" Icon="far fa-times-circle" Color="red" />
        </OptionButtons>
    </Head>
    <Body>
    
        @if (FileMode == 1)
        {
            @if (UpcomingFiles.Count == 0)
            {
                <div class="no-files">
                    <i class="fas fa-box-open"></i>
                    <span>@lblNoUpcomingFiles</span>
                </div>
            }
            else
            {
                @foreach (var file in UpcomingFiles)
                {
                    <div class="file-table-row">
                        <span class="icon">
                            <img class="icon" src="icons/filetypes/video/mkv.svg" @onclick="() => OpenFile(file)"/>
                        </span>
                        <span class="path">
                            <span @onclick="() => OpenFile(file)">@file.DisplayName</span>
                        </span>
                        <span class="library">
                            <FlowIconValue Icon="library" Value="@file.LibraryName"/>
                        </span>
                    </div>

                }
            }
        }
        else
        {
            var list = (FileMode == 2 ? FailedFiles : RecentlyFinished) ?? [];
            if (list.Count == 0)
            {
                var label = FileMode == 2 ? lblNoFailedFiles : lblNoRecentlyFinishedFiles;
                <div class="no-files">
                    <i class="fas fa-box-open"></i>
                    <span>@label</span>
                </div>
            }
            else
            {
                foreach (var file in list ?? [])
                {
                    <div class="file-table-row @(file.Message != null ? "has-message" : "no-message")">
                        @if (FileMode == 0)
                        {
                            var percentage = Math.Min(100, (file.FinalSize / (double)file.OriginalSize) * 100);
                            <div class="savings" style="width: @percentage%"></div>
                        }
                        <span class="icon">
                            <img class="icon" src="icons/filetypes/video/mkv.svg" @onclick="() => OpenFile(file)"/>
                        </span>
                        <div class="center">
                            <span class="path">
                                <span @onclick="() => OpenFile(file)">@file.DisplayName</span>
                            </span>
                            <span class="time">
                                <span @onclick="() => OpenFile(file)">@file.When</span>
                            </span>
                            @if (file.Message != null)
                            {
                                <div class="message" @onclick="() => OpenFile(file)"><span>@file.Message</span></div>
                            }
                        </div>
                    </div>
                }
            }
        }

    </Body>
</ContainerWidget>
